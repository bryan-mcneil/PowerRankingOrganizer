@using PowerRankingOrganizer.Models
@model Player

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="header-text">Register Player</h2>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@if (Model != null)
{
    if (Model.Id != 0)
    {
        using (Html.BeginForm("Create", "Player"))
        {
            @Html.AntiForgeryToken()

            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Main)
                @Html.DropDownListFor(model => model.Main,
                    new SelectList(Enum.GetValues(typeof(Characters))),
                    "Select Character", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Main, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Secondary)
                @Html.DropDownListFor(model => model.Secondary,
                    new SelectList(Enum.GetValues(typeof(Characters))),
                    "Select Character", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Secondary, "", new { @class = "text-danger" })
            </div>

            @Html.HiddenFor(model => model.Id)
            <button type="submit" class="btn btn-primary">Save Changes</button>
        }
    }
    else
    {
        <p>Could not find player data</p>
    }
    
}
else
{
    using (Html.BeginForm("Create", "Player"))
    {
        @Html.AntiForgeryToken()

        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Main)
            @Html.DropDownListFor(model => model.Main,
                     new SelectList(Enum.GetValues(typeof(Characters))),
                     "Select Character", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Main, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Secondary)
            @Html.DropDownListFor(model => model.Secondary,
                     new SelectList(Enum.GetValues(typeof(Characters))),
                     "Select Character", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Secondary, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn btn-primary">Register</button>
    }
}
<br />
<div>
    @Html.ActionLink("Go to Player List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
